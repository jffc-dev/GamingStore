# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ProductImage {
  id: String!
  productId: String!
  url: String!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Category {
  categoryId: ID!
  name: String!
  description: String
  isDeleted: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

type Product {
  id: String!
  categoryId: String!
  name: String!
  description: String
  price: Float!
  isActive: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  images: [ProductImage!]
  category: Category
}

type ProductEdge {
  cursor: String!
  node: Product!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type PaginatedProducts {
  edges: [ProductEdge!]!
  pageInfo: PageInfo!
}

type CartDetail {
  userId: String!
  productId: String!
  quantity: Int!
  createdAt: DateTime
  updatedAt: DateTime
}

type LikeProduct {
  userId: String!
  productId: String!
  createdAt: DateTime
}

type OrderDetail {
  id: Int!
  orderId: String!
  productId: String!
  quantity: Int
  unitPrice: Float
  subtotal: Float
}

type Order {
  id: String!
  status: String!
  userId: String!
  total: Float
  createdAt: DateTime!
  updatedAt: DateTime
  orderDetails: [OrderDetail!]!
}

type Query {
  products(isActive: Boolean, categoryId: String, first: Int!, after: String): PaginatedProducts!
  product(productId: String!): Product!
  cartItems: [CartDetail!]!
  likedProducts: [LikeProduct!]!
  myOrders: [Order!]!
  orders(userId: String): [Order!]!
  categories: [Category!]!
}

type Mutation {
  createProduct(data: CreateProductInput!): Product!
  updateProduct(productId: String!, data: UpdateProductInput!): Product!
  deleteProduct(productId: String!): Boolean!
  enableProduct(productId: String!): Product!
  disableProduct(productId: String!): Product!
  addItemToCart(data: CreateCartDetailInput!): CartDetail!
  likeProduct(data: LikeProductInput!): LikeProduct!
  createOrder: Order!
}

input CreateProductInput {
  name: String!
  categoryId: String!
  description: String
  stock: Float
  isActive: Boolean
  price: Float!
}

input UpdateProductInput {
  name: String
  description: String
  stock: Float
  isActive: Boolean
  price: Float
}

input CreateCartDetailInput {
  productId: String!
  quantity: Int!
}

input LikeProductInput {
  productId: String!
}